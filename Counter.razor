@page "/counter"
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.RadarChart
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.Util

<h1>Radar Chart</h1>
<div class="row">
    <button class="btn btn-primary" @onclick="OnClick">Add Dataset</button>
</div>
<ChartJsRadarChart @ref="_radarChartJs" Config="@_config" Width="600" Height="300" />

@code {
    private RadarConfig _config;
    private ChartJsRadarChart _radarChartJs;

    private Random _rand = new Random();

    protected override void OnInitialized()
    {
        _config = new RadarConfig
        {
            Options = new RadarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Participant's scores"
                }
            }
        };

        _config.Data.Labels = new List<string> { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N"};

        List<int> x = new List<int> { 2, 5, 1, 3, 1, 1, 4, 2, 3, 4, 2, 2, 2, 3 };
        List<double> y = new List<double>();
        foreach (var i in x)
            y.Add(Convert.ToDouble(i));

        _config.Data.Datasets.Add(new RadarDataset
        {
            Data = y,
            Label = $"Participant {_config.Data.Datasets.Count + 1}",
            BorderColor = ColorUtil.RandomColorString()
        });
    }

    public async Task OnClick()
    {
        List<int> x = new List<int> { 1, 1, 1, 3, 1, 1, 4, 2, 3, 4, 5, 2, 5, 3 };
        List<double> y = new List<double>();
        foreach(var i in x)
            y.Add(Convert.ToDouble(i));


        _config.Data.Datasets.Add(new RadarDataset
        {
            Data = y,
            Label = $"Participant {_config.Data.Datasets.Count + 1}",
            BorderColor = ColorUtil.RandomColorString()
        });

        await _radarChartJs.Update();
    }

}